apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: modeld-system/serving-cert
  name: data-mutating-webhook-configuration
  namespace: modeld-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-data-operator-webhook
      namespace: modeld-system
      path: /mutate-data-modeld-io-v1alpha1-corpus
  failurePolicy: Fail
  name: corpus.data.modeld.io
  rules:
  - apiGroups:
    - data.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - corpuses
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-data-operator-webhook
      namespace: modeld-system
      path: /mutate-data-modeld-io-v1alpha1-dataproduct
  failurePolicy: Fail
  name: dataproduct.data.modeld.io
  rules:
  - apiGroups:
    - data.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - dataproducts
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-data-operator-webhook
      namespace: modeld-system
      path: /mutate-data-modeld-io-v1alpha1-dataproductversion
  failurePolicy: Fail
  name: dataproductversion.data.modeld.io
  rules:
  - apiGroups:
    - data.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - dataproductversions
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-data-operator-webhook
      namespace: modeld-system
      path: /mutate-data-modeld-io-v1alpha1-dataset
  failurePolicy: Fail
  name: dataset.data.modeld.io
  rules:
  - apiGroups:
    - data.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - datasets
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-data-operator-webhook
      namespace: modeld-system
      path: /mutate-data-modeld-io-v1alpha1-flatfile
  failurePolicy: Fail
  name: flatfiles.data.modeld.io
  rules:
  - apiGroups:
    - data.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - flatfiles
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-data-operator-webhook
      namespace: modeld-system
      path: /mutate-data-modeld-io-v1alpha1-schema
  failurePolicy: Fail
  name: schema.data.modeld.io
  rules:
  - apiGroups:
    - data.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - schemas
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-data-operator-webhook
      namespace: modeld-system
      path: /mutate-data-modeld-io-v1alpha1-table
  failurePolicy: Fail
  name: tables.data.modeld.io
  rules:
  - apiGroups:
    - data.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - tables
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: modeld-system/serving-cert
  name: inference-mutating-webhook-configuration
  namespace: modeld-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-inference-operator-webhook
      namespace: modeld-system
      path: /mutate-inference-modeld-io-v1alpha1-prediction
  failurePolicy: Fail
  name: predictions.inference.modeld.io
  rules:
  - apiGroups:
    - inference.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - predictions
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-inference-operator-webhook
      namespace: modeld-system
      path: /mutate-inference-modeld-io-v1alpha1-predictor
  failurePolicy: Fail
  name: predictors.inference.modeld.io
  rules:
  - apiGroups:
    - inference.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - predictors
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-inference-operator-webhook
      namespace: modeld-system
      path: /mutate-inference-modeld-io-v1alpha1-curtain
  failurePolicy: Fail
  name: curtains.inference.modeld.io
  rules:
  - apiGroups:
    - inference.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - curtains
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: modeld-system/serving-cert
  name: infra-mutating-webhook-configuration
  namespace: modeld-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /mutate-infra-modeld-io-v1alpha1-account
  failurePolicy: Fail
  name: account.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - accounts
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /mutate-infra-modeld-io-v1alpha1-credential
  failurePolicy: Fail
  name: credential.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - credentials
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /mutate-infra-modeld-io-v1alpha1-lab
  failurePolicy: Fail
  name: lab.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - labs
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /mutate-infra-modeld-io-v1alpha1-notifier
  failurePolicy: Fail
  name: notifier.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - notifiers
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /mutate-infra-modeld-io-v1alpha1-servingsite
  failurePolicy: Fail
  name: servingsite.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - servingsites
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /mutate-infra-modeld-io-v1alpha1-tenant
  failurePolicy: Fail
  name: tenant.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - tenant
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /mutate-infra-modeld-io-v1alpha1-virtualbucket
  failurePolicy: Fail
  name: virtualbucket.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - virtualbuckets
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: modeld-system/serving-cert
  name: report-mutating-webhook-configuration
  namespace: modeld-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-report-operator-webhook
      namespace: modeld-system
      path: /mutate-training-modeld-io-v1alpha1-report
  failurePolicy: Fail
  name: report.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - reports
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: modeld-system/serving-cert
  name: training-mutating-webhook-configuration
  namespace: modeld-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /mutate-training-modeld-io-v1alpha1-model
  failurePolicy: Fail
  name: model.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - models
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /mutate-training-modeld-io-v1alpha1-notebook
  failurePolicy: Fail
  name: notebook.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - notebooks
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /mutate-training-modeld-io-v1alpha1-notebookrun
  failurePolicy: Fail
  name: notebookrun.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - notebookruns
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /mutate-training-modeld-io-v1alpha1-pipeline
  failurePolicy: Fail
  name: pipeline.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pipelines
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /mutate-training-modeld-io-v1alpha1-pipelinerun
  failurePolicy: Fail
  name: pipelinerun.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pipelineruns
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /mutate-training-modeld-io-v1alpha1-pipelinetrigger
  failurePolicy: Fail
  name: pipelinetrigger.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pipelinetriggers
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /mutate-training-modeld-io-v1alpha1-study
  failurePolicy: Fail
  name: study.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - studies
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /mutate-training-modeld-io-v1alpha1-trainer
  failurePolicy: Fail
  name: trainer.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - trainers
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /mutate-training-modeld-io-v1alpha1-automlrun
  failurePolicy: Fail
  name: automlrun.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - automlruns
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: modeld-api-proxy
    app.kubernetes.io/part-of: modeld
  name: modeld-api-proxy
  namespace: modeld-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: modeld-apigateway
    app.kubernetes.io/part-of: modeld
  name: modeld-apigateway
  namespace: modeld-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: modeld-auth
    app.kubernetes.io/part-of: modeld
  name: modeld-auth
  namespace: modeld-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: modeld-data-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-data-operator
  namespace: modeld-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: data
    app.kubernetes.io/name: modeld-data-science
    app.kubernetes.io/part-of: modeld
  name: modeld-data-science
  namespace: modeld-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: modeld-datadock
    app.kubernetes.io/part-of: modeld
  name: modeld-datadock
  namespace: modeld-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: modeld-inference-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-inference-operator
  namespace: modeld-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: modeld-infra-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-infra-operator
  namespace: modeld-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: modeld-planner
    app.kubernetes.io/part-of: modeld
  name: modeld-planner
  namespace: modeld-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: modeld-publisher
    app.kubernetes.io/part-of: modeld
  name: modeld-publisher
  namespace: modeld-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: data
    app.kubernetes.io/name: modeld-report-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-report-operator
  namespace: modeld-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: modeld-reporter
    app.kubernetes.io/part-of: modeld
  name: modeld-reporter
  namespace: modeld-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: modeld-training-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-training-operator
  namespace: modeld-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: modeld-api-proxy
    app.kubernetes.io/part-of: modeld
  name: modeld-api-proxy
  namespace: modeld-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: modeld-planner
    app.kubernetes.io/part-of: modeld
  name: modeld-planner
  namespace: modeld-system
rules:
- apiGroups:
  - catalog.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - data.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - inference.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - infra.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - labeling.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - training.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: modeld-publisher
    app.kubernetes.io/part-of: modeld
  name: modeld-publisher
  namespace: modeld-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: modeld-reporter
    app.kubernetes.io/part-of: modeld
  name: modeld-reporter
  namespace: modeld-system
rules:
- apiGroups:
  - catalog.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - data.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - inference.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - infra.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - labeling.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - training.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: modeld-apigateway
    app.kubernetes.io/part-of: modeld
  name: modeld-apigateway
  namespace: modeld-system
rules:
- apiGroups:
  - catalog.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - data.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - inference.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - infra.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - labeling.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - team.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - training.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: modeld-auth
    app.kubernetes.io/part-of: modeld
  name: modeld-auth
  namespace: modeld-system
rules:
- apiGroups:
  - catalog.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - data.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - inference.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - infra.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - labeling.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - training.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: modeld-data-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-data-operator
  namespace: modeld-system
rules:
- apiGroups:
  - catalog.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - data.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - inference.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - infra.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - labeling.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - training.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: modeld-datadock
    app.kubernetes.io/part-of: modeld
  name: modeld-datadock
  namespace: modeld-system
rules:
- apiGroups:
  - catalog.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - data.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - inference.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - infra.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - labeling.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - training.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: modeld-inference-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-inference-operator
  namespace: modeld-system
rules:
- apiGroups:
  - catalog.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - data.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - inference.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - infra.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - labeling.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - training.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - create
  - list
  - watch
  - update
  - delete
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: modeld-infra-operator
    app.kubernetes.io/name: modeld-infra-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-infra-operator
  namespace: modeld-system
rules:
- apiGroups:
  - catalog.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - data.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - inference.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - infra.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - labeling.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - training.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - networking.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - create
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: modeld-report-operator
    app.kubernetes.io/name: modeld-report-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-report-operator
  namespace: modeld-system
rules:
- apiGroups:
  - catalog.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - data.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - inference.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - infra.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - labeling.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - training.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - rbac
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: modeld-training-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-training-operator
  namespace: modeld-system
rules:
- apiGroups:
  - catalog.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - data.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - inference.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - infra.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - labeling.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - training.modeld.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: modeld-api-proxy
    app.kubernetes.io/part-of: modeld
  name: modeld-api-proxy
  namespace: modeld-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: modeld-api-proxy
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:modeld-system:modeld-api-proxy
  namespace: null
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: modeld-planner
    app.kubernetes.io/name: modeld-planner
    app.kubernetes.io/part-of: modeld
  name: modeld-planner
  namespace: modeld-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: modeld-planner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:modeld-system:modeld-planner
  namespace: null
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: modeld-publisher
    app.kubernetes.io/part-of: modeld
  name: modeld-publisher
  namespace: modeld-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: modeld-publisher
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:modeld-system:modeld-publisher
  namespace: null
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: modeld-reporter
    app.kubernetes.io/part-of: modeld
  name: modeld-reporter
  namespace: modeld-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: modeld-reporter
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:modeld-system:modeld-reporter
  namespace: null
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: modled-apigateway
    app.kubernetes.io/part-of: modeld
  name: modeld-apigateway
  namespace: modeld-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: modeld-apigateway
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:modeld-system:modeld-apigateway
  namespace: null
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: modeld-data-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-data-operator
  namespace: modeld-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: modeld-data-operator
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:modeld-system:modeld-data-operator
  namespace: null
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: modeld-datadock
    app.kubernetes.io/part-of: modeld
  name: modeld-datadock
  namespace: modeld-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: modeld-datadock
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:modeld-system:modeld-datadock
  namespace: null
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: modeld-inference-operator
    app.kubernetes.io/name: modeld-inference-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-inference-operator
  namespace: modeld-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: modeld-inference-operator
subjects:
- kind: ServiceAccount
  name: modeld-inference-operator
  namespace: modeld-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: modeld-infra-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-infra-operator
  namespace: modeld-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: modeld-infra-operator
subjects:
- kind: ServiceAccount
  name: modeld-infra-operator
  namespace: modeld-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: modeld-report-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-report-operator
  namespace: modeld-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: modeld-report-operator
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:modeld-system:modeld-report-operator
  namespace: null
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: modeld-training-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-training-operator
  namespace: modeld-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: modeld-training-operator
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:modeld-system:modeld-training-operator
  namespace: null
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: modeld-auth
    app.kubernetes.io/part-of: modeld
  name: modeld-auth
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: modeld-auth
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:modeld-system:modeld-auth
  namespace: null
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: data-operator-metrics
    app.kubernetes.io/part-of: modeld
  name: data-operator-metrics
  namespace: modeld-system
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/name: modeld-data-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/part-of: modeld
  name: frontend
  namespace: modeld-system
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: modeld-frontend
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-api-proxy
    app.kubernetes.io/part-of: modeld
  name: modeld-api-proxy
  namespace: modeld-system
spec:
  ports:
  - name: grpc
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: modeld-api-proxy
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-apigateway
    app.kubernetes.io/part-of: modeld
  name: modeld-apigateway
  namespace: modeld-system
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: modeld-apigateway
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-apigateway-metrics
    app.kubernetes.io/part-of: modeld
  name: modeld-apigateway-metrics
  namespace: modeld-system
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/name: modeld-apigateway
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: infra
    app.kubernetes.io/name: modeld-auth
    app.kubernetes.io/part-of: modeld
  name: modeld-auth
  namespace: modeld-system
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: modeld-auth
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-data-operator-webhook
    app.kubernetes.io/part-of: modeld
  name: modeld-data-operator-webhook
  namespace: modeld-system
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: modeld-data-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-data-science
    app.kubernetes.io/part-of: modeld
  name: modeld-data-science
  namespace: modeld-system
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: modeld-data-science
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-data-science-metrics
    app.kubernetes.io/part-of: modeld
  name: modeld-data-science-metrics
  namespace: modeld-system
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/name: modeld-data-science
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-datadock
    app.kubernetes.io/part-of: modeld
  name: modeld-datadock
  namespace: modeld-system
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8095
  selector:
    app.kubernetes.io/name: modeld-datadock
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-datadock-metrics
    app.kubernetes.io/part-of: modeld
  name: modeld-datadock-metrics
  namespace: modeld-system
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/name: modeld-datadock
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-inference-operator-metrics
    app.kubernetes.io/part-of: modeld
  name: modeld-inference-operator-metrics
  namespace: modeld-system
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/name: modeld-inference-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-inference-operator-webhook
    app.kubernetes.io/part-of: modeld
  name: modeld-inference-operator-webhook
  namespace: modeld-system
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: modeld-inference-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-infra-operator-metrics
    app.kubernetes.io/part-of: modeld
  name: modeld-infra-operator-metrics
  namespace: modeld-system
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/name: modeld-infra-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-infra-operator-webhook
    app.kubernetes.io/part-of: modeld
  name: modeld-infra-operator-webhook
  namespace: modeld-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/name: modeld-infra-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-planner
    app.kubernetes.io/part-of: modeld
  name: modeld-planner
  namespace: modeld-system
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: modeld-planner
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-planner-metrics
    app.kubernetes.io/part-of: modeld
  name: modeld-planner-metrics
  namespace: modeld-system
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/name: modeld-planner
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-publisher
    app.kubernetes.io/part-of: modeld
  name: modeld-publisher
  namespace: modeld-system
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: modeld-publisher
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-publisher-metrics
    app.kubernetes.io/part-of: modeld
  name: modeld-publisher-metrics
  namespace: modeld-system
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/name: modeld-publisher
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/name: modeld-report-operator-metrics
    app.kubernetes.io/part-of: modeld
  name: modeld-report-operator-metrics
  namespace: modeld-system
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/name: modeld-report-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-report-operator-webhook
    app.kubernetes.io/part-of: modeld
  name: modeld-report-operator-webhook
  namespace: modeld-system
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: modeld-report-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-reporter
    app.kubernetes.io/part-of: modeld
  name: modeld-reporter
  namespace: modeld-system
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: modeld-reporter
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-reporter-metrics
    app.kubernetes.io/part-of: modeld
  name: modeld-reporter-metrics
  namespace: modeld-system
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/name: modeld-reporter
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-training-operator-metrics
    app.kubernetes.io/part-of: modeld
  name: modeld-training-operator-metrics
  namespace: modeld-system
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/name: modeld-training-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: modeld-training-operator-webhook
    app.kubernetes.io/part-of: modeld
  name: modeld-training-operator-webhook
  namespace: modeld-system
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: modeld-training-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: modeld-api-proxy
    app.kubernetes.io/part-of: modeld
  name: modeld-api-proxy
  namespace: modeld-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-api-proxy
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-api-proxy
    spec:
      containers:
      - image: quay.io/metaprov/modeld-api-proxy
        imagePullPolicy: IfNotPresent
        name: main
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 8008
          name: profiling
      serviceAccountName: modeld-api-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: infra
    app.kubernetes.io/name: modeld-apigateway
    app.kubernetes.io/part-of: modeld
  name: modeld-apigateway
  namespace: modeld-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-apigateway
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-apigateway
    spec:
      containers:
      - env:
        - name: GRPC_TRACE
          value: all
        - name: GRPC_VERBOSITY
          value: DEBUG
        - name: GRPC_GO_LOG_VERBOSITY_LEVEL
          value: "99"
        - name: GRPC_GO_LOG_SEVERITY_LEVEL
          value: info
        - name: GRPC_MAX_SIZE
          value: "100000000"
        - name: AUTH_HOST
          value: modeld-auth
        - name: AUTH_PORT
          value: "8080"
        - name: FAKE
          value: "false"
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8080"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CLOUDS_HOST
          value: 127.0.0.1
        - name: CLOUDS_PORT
          value: "8090"
        - name: CACHE_PATH
          value: /home/modeld/data
        image: quay.io/metaprov/modeld-api-gateway:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8080
          initialDelaySeconds: 10
        name: main
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8080
          initialDelaySeconds: 5
        resources:
          limits:
            cpu: 50m
            memory: 30Mi
          requests:
            cpu: 50m
            memory: 20Mi
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
      - env:
        - name: GRPC_TRACE
          value: all
        - name: GRPC_VERBOSITY
          value: DEBUG
        - name: GRPC_GO_LOG_VERBOSITY_LEVEL
          value: "99"
        - name: GRPC_GO_LOG_SEVERITY_LEVEL
          value: info
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8090"
        - name: DEBUG
          value: "false"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        image: quay.io/metaprov/modeld-clouds
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 10
        name: clouds
        ports:
        - containerPort: 8090
          name: http
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        resources:
          limits:
            cpu: 50m
            memory: 30Mi
          requests:
            cpu: 50m
            memory: 20Mi
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
      serviceAccountName: modeld-apigateway
      volumes:
      - emptyDir: {}
        name: data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: modeld-auth
    app.kubernetes.io/part-of: modeld
  name: modeld-auth
  namespace: modeld-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-auth
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-auth
    spec:
      containers:
      - env:
        - name: FAKE
          value: "false"
        - name: METRIC_ADDR
          value: :9090
        - name: ENABLE_LEADER_ELECTION
          value: "true"
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8080"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        image: quay.io/metaprov/modeld-auth
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8080
          initialDelaySeconds: 10
        name: main
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8080
          initialDelaySeconds: 5
      serviceAccountName: modeld-auth
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: modeld-data-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-data-operator
  namespace: modeld-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-data-operator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-data-operator
    spec:
      containers:
      - env:
        - name: DATASCIENCE_HOST
          value: data-science
        - name: DATASCIENCE_PORT
          value: "8080"
        - name: CLOUDS_HOST
          value: 127.0.0.1
        - name: CLOUDS_PORT
          value: "8090"
        - name: CACHE_PATH
          value: /home/modeld/data
        - name: FAKE
          value: "false"
        - name: METRIC_ADDR
          value: :9090
        - name: ENABLE_LEADER_ELECTION
          value: "false"
        - name: WH
          value: "true"
        image: quay.io/metaprov/modeld-data-operator:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 10
        name: main
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 20m
            memory: 30Mi
          requests:
            cpu: 20m
            memory: 20Mi
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-server-cert
          readOnly: true
      serviceAccountName: modeld-data-operator
      volumes:
      - emptyDir: {}
        name: data
      - name: webhook-server-cert
        secret:
          secretName: webhook-server-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: modeld-data-science
    app.kubernetes.io/part-of: modeld
  name: modeld-data-science
  namespace: modeld-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-data-science
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-data-science
    spec:
      containers:
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8080"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        - name: CLOUDS_HOST
          value: 127.0.0.1
        - name: CLOUDS_PORT
          value: "8090"
        - name: DATA_SCIENCE_HOST
          value: modeld-data-science
        - name: DATA_SCIENCE_PORT
          value: "8080"
        image: quay.io/metaprov/modeld-data-science:latest
        imagePullPolicy: IfNotPresent
        name: main
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8090"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        image: quay.io/metaprov/modeld-clouds
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8090
          initialDelaySeconds: 10
        name: clouds
        ports:
        - containerPort: 8090
          name: grpc
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8090
          initialDelaySeconds: 5
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
      serviceAccountName: modeld-data-science
      volumes:
      - emptyDir: {}
        name: data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: modeld-datadock
    app.kubernetes.io/part-of: modeld
  name: modeld-datadock
  namespace: modeld-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-datadock
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-datadock
    spec:
      containers:
      - env:
        - name: CLOUDS_HOST
          value: 127.0.0.1
        - name: CLOUDS_PORT
          value: "8090"
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8095"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        image: quay.io/metaprov/modeld-datadock
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 10
        name: main
        ports:
        - containerPort: 8095
          name: http
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8090"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        image: quay.io/metaprov/modeld-clouds
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 10
        name: clouds
        ports:
        - containerPort: 8090
          name: http
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
      serviceAccountName: modeld-datadock
      volumes:
      - emptyDir: {}
        name: data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: modeld-frontend
    app.kubernetes.io/part-of: modeld
    role: app
  name: modeld-frontend
  namespace: modeld-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-frontend
    spec:
      containers:
      - image: quay.io/metaprov/modeld-frontend
        imagePullPolicy: IfNotPresent
        name: main
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8008
          name: profiling
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: modeld-inference-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-inference-operator
  namespace: modeld-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-inference-operator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-inference-operator
    spec:
      containers:
      - env:
        - name: CLOUDS_HOST
          value: 127.0.0.1
        - name: CLOUDS_PORT
          value: "8090"
        - name: CACHE_PATH
          value: /home/modeld/data
        - name: FAKE
          value: "false"
        - name: METRICS_ADDR
          value: :9090
        - name: ENABLE_LEADER_ELECTION
          value: "false"
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8080"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: WH
          value: "true"
        image: quay.io/metaprov/modeld-inference-operator:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 10
        name: main
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-server-cert
          readOnly: true
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8090"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        image: quay.io/metaprov/modeld-clouds
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8090
          initialDelaySeconds: 10
        name: clouds
        ports:
        - containerPort: 8090
          name: http
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8090
          initialDelaySeconds: 5
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
      serviceAccountName: modeld-inference-operator
      volumes:
      - emptyDir: {}
        name: data
      - name: webhook-server-cert
        secret:
          secretName: webhook-server-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: modeld-infra-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-infra-operator
  namespace: modeld-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-infra-operator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-infra-operator
      namespace: modeld-system
    spec:
      containers:
      - env:
        - name: FAKE
          value: "false"
        - name: METRIC_ADDR
          value: :9090
        - name: ENABLE_LEADER_ELECTION
          value: "false"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        - name: CLOUDS_HOST
          value: 127.0.0.1
        - name: CLOUDS_PORT
          value: "8090"
        - name: AUTH_HOST
          value: auth
        - name: AUTH_PORT
          value: "8080"
        - name: WH
          value: "true"
        image: quay.io/metaprov/modeld-infra-operator:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 10
        name: main
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-server-cert
          readOnly: true
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8090"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        image: quay.io/metaprov/modeld-clouds
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8090
          initialDelaySeconds: 10
        name: clouds
        ports:
        - containerPort: 8090
          name: http
        - containerPort: 9090
          name: metrics
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8090
          initialDelaySeconds: 5
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
      serviceAccountName: modeld-infra-operator
      volumes:
      - emptyDir: {}
        name: data
      - name: webhook-server-cert
        secret:
          secretName: webhook-server-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: modeld-planner
    app.kubernetes.io/part-of: modeld
  name: modeld-planner
  namespace: modeld-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-planner
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-planner
    spec:
      containers:
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8080"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        image: quay.io/metaprov/modeld-planner:latest
        imagePullPolicy: IfNotPresent
        name: main
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        resources:
          limits:
            cpu: 50m
            memory: 400Mi
          requests:
            cpu: 50m
            memory: 400Mi
      serviceAccountName: modeld-planner
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: modeld-publisher
    app.kubernetes.io/part-of: modeld
  name: modeld-publisher
  namespace: modeld-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-publisher
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-publisher
    spec:
      containers:
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8080"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        - name: CLOUDS_HOST
          value: 127.0.0.1
        - name: CLOUDS_PORT
          value: "8090"
        image: quay.io/metaprov/modeld-publisher:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8080
          initialDelaySeconds: 10
        name: main
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8080
          initialDelaySeconds: 5
        resources:
          limits:
            cpu: 50m
            memory: 400Mi
          requests:
            cpu: 50m
            memory: 400Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
        - mountPath: /var/run/docker.sock
          name: docker-sock-volume
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8090"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        image: quay.io/metaprov/modeld-clouds
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8090
          initialDelaySeconds: 10
        name: clouds
        ports:
        - containerPort: 8090
          name: http
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8090
          initialDelaySeconds: 5
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
      serviceAccountName: modeld-publisher
      volumes:
      - emptyDir: {}
        name: data
      - hostPath:
          path: /var/run/docker.sock
          type: File
        name: docker-sock-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: modeld-report-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-report-operator
  namespace: modeld-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-report-operator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-report-operator
    spec:
      containers:
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8080"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        - name: CLOUDS_HOST
          value: 127.0.0.1
        - name: CLOUDS_PORT
          value: "8090"
        - name: REPORTER_HOST
          value: modeld-reporter
        - name: REPORTER_PORT
          value: "8080"
        - name: WH
          value: "true"
        - name: ENABLE_LEADER_ELECTION
          value: "false"
        - name: GRPC_MAX_SIZE
          value: "100000000"
        image: quay.io/metaprov/modeld-report-operator:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 10
        name: main
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-server-cert
          readOnly: true
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8090"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        image: quay.io/metaprov/modeld-clouds
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8090
          initialDelaySeconds: 10
        name: clouds
        ports:
        - containerPort: 8090
          name: http
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8090
          initialDelaySeconds: 5
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
      serviceAccountName: modeld-report-operator
      volumes:
      - emptyDir: {}
        name: data
      - name: webhook-server-cert
        secret:
          secretName: webhook-server-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: modeld-reporter
    app.kubernetes.io/part-of: modeld
  name: modeld-reporter
  namespace: modeld-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-reporter
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-reporter
    spec:
      containers:
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8080"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        - name: CLOUDS_HOST
          value: 127.0.0.1
        - name: CLOUDS_PORT
          value: "8090"
        image: quay.io/metaprov/modeld-reporter:latest
        imagePullPolicy: IfNotPresent
        name: main
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8090"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        image: quay.io/metaprov/modeld-clouds
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8090
          initialDelaySeconds: 10
        name: clouds
        ports:
        - containerPort: 8090
          name: http
        - containerPort: 9090
          name: metrics
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8090
          initialDelaySeconds: 5
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
      serviceAccountName: modeld-reporter
      volumes:
      - emptyDir: {}
        name: data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: modeld-training-operator
    app.kubernetes.io/part-of: modeld
  name: modeld-training-operator
  namespace: modeld-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-training-operator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-training-operator
    spec:
      containers:
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8090"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        - name: CLOUDS_HOST
          value: 127.0.0.1
        - name: CLOUDS_PORT
          value: "8090"
        - name: PUBLISHER_HOST
          value: modeld-publisher
        - name: PUBLISHER_PORT
          value: "8080"
        - name: PLANNER_HOST
          value: modeld-planner
        - name: PLANNER_PORT
          value: "8080"
        - name: ENABLE_LEADER_ELECTION
          value: "false"
        - name: WH
          value: "true"
        - name: GRPC_MAX_SIZE
          value: "100000000"
        image: quay.io/metaprov/modeld-training-operator:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 10
        name: main
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-server-cert
          readOnly: true
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8090"
        - name: DEBUG
          value: "true"
        - name: ENV
          value: dev
        - name: CACHE_PATH
          value: /home/modeld/data
        image: quay.io/metaprov/modeld-clouds
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8090
          initialDelaySeconds: 10
        name: clouds
        ports:
        - containerPort: 8090
          name: http
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:8090
          initialDelaySeconds: 5
        volumeMounts:
        - mountPath: /home/modeld/data
          name: data
      serviceAccountName: modeld-training-operator
      volumes:
      - emptyDir: {}
        name: data
      - name: webhook-server-cert
        secret:
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: serving-cert
  namespace: modeld-system
spec:
  dnsNames:
  - modeld-infra-operator-webhook.svc.cluster.local
  - modeld-infra-operator-webhook.modeld-system.svc
  - modeld-infra-operator-webhook
  - modeld-data-operator-webhook.svc.cluster.local
  - modeld-data-operator-webhook.modeld-system.svc
  - modeld-data-operator-webhook
  - modeld-training-operator-webhook.svc.cluster.local
  - modeld-training-operator-webhook.modeld-system.svc
  - modeld-training-operator-webhook
  - modeld-inference-operator-webhook.svc.cluster.local
  - modeld-inference-operator-webhook.modeld-system.svc
  - modeld-inference-operator-webhook
  - modeld-report-operator-webhook.svc.cluster.local
  - modeld-report-operator-webhook.modeld-system.svc
  - modeld-report-operator-webhook
  issuerRef:
    kind: Issuer
    name: selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: letsencrypt-prod
  namespace: modeld-system
spec:
  acme:
    email: user@modeld.io
    privateKeySecretRef:
      name: letsencrypt-prod
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
        ingress:
          class: nginx
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: modeld-system
spec:
  selfSigned: {}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/proxy-body-size: 8m
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/cors-allow-headers: x-user-agent,x-grpc-web,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.org/client-max-body-size: 50m
    nginx.org/proxy-connect-timeout: 30s
    nginx.org/proxy-read-timeout: 20s
  name: ui
  namespace: modeld-system
spec:
  rules:
  - host: ui.modeld.io
    http:
      paths:
      - backend:
          serviceName: frontend
          servicePort: 80
        path: /
  - host: api.modeld.io
    http:
      paths:
      - backend:
          serviceName: modeld-api-proxy
          servicePort: 80
        path: /
      - backend:
          serviceName: modeld-datadock
          servicePort: 80
        path: /upload
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: modeld-system/serving-cert
  name: data-validating-webhook-configuration
  namespace: modeld-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-data-operator-webhook
      namespace: modeld-system
      path: /validate-data-modeld-io-v1alpha1-corpus
  failurePolicy: Fail
  name: corpus.data.modeld.io
  rules:
  - apiGroups:
    - data.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - corpuses
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-data-operator-webhook
      namespace: modeld-system
      path: /validate-data-modeld-io-v1alpha1-dataproduct
  failurePolicy: Fail
  name: dataproduct.data.modeld.io
  rules:
  - apiGroups:
    - data.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - dataproducts
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-data-operator-webhook
      namespace: modeld-system
      path: /validate-data-modeld-io-v1alpha1-dataproductversion
  failurePolicy: Fail
  name: dataproductversion.data.modeld.io
  rules:
  - apiGroups:
    - data.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - dataproductversions
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-data-operator-webhook
      namespace: modeld-system
      path: /validate-data-modeld-io-v1alpha1-flatfile
  failurePolicy: Fail
  name: flatfile.data.modeld.io
  rules:
  - apiGroups:
    - data.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - flatfiles
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-data-operator-webhook
      namespace: modeld-system
      path: /validate-data-modeld-io-v1alpha1-schema
  failurePolicy: Fail
  name: schema.data.modeld.io
  rules:
  - apiGroups:
    - data.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - schemas
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-data-operator-webhook
      namespace: modeld-system
      path: /validate-data-modeld-io-v1alpha1-table
  failurePolicy: Fail
  name: tables.data.modeld.io
  rules:
  - apiGroups:
    - data.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - tables
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: modeld-system/serving-cert
  name: inference-validating-webhook-configuration
  namespace: modeld-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-inference-operator-webhook
      namespace: modeld-system
      path: /validate-inference-modeld-io-v1alpha1-prediction
  failurePolicy: Fail
  name: prediction.inference.modeld.io
  rules:
  - apiGroups:
    - inference.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - predictions
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-inference-operator-webhook
      namespace: modeld-system
      path: /validate-inference-modeld-io-v1alpha1-predictor
  failurePolicy: Fail
  name: predictor.inference.modeld.io
  rules:
  - apiGroups:
    - inference.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - predictors
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-inference-operator-webhook
      namespace: modeld-system
      path: /validate-inference-modeld-io-v1alpha1-curtain
  failurePolicy: Fail
  name: curtain.inference.modeld.io
  rules:
  - apiGroups:
    - inference.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - curtains
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: modeld-system/serving-cert
  name: infra-validating-webhook-configuration
  namespace: modeld-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /validate-infra-modeld-io-v1alpha1-account
  failurePolicy: Fail
  name: account.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - accounts
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /validate-infra-modeld-io-v1alpha1-credential
  failurePolicy: Fail
  name: credential.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - credentials
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /validate-infra-modeld-io-v1alpha1-lab
  failurePolicy: Fail
  name: lab.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - labs
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /validate-infra-modeld-io-v1alpha1-notifier
  failurePolicy: Fail
  name: notifier.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - notifiers
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /validate-infra-modeld-io-v1alpha1-license
  failurePolicy: Fail
  name: license.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - licenses
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /validate-infra-modeld-io-v1alpha1-servingsite
  failurePolicy: Fail
  name: servingsite.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - servingsites
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /validate-infra-modeld-io-v1alpha1-tenant
  failurePolicy: Fail
  name: tenant.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - tenants
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-infra-operator-webhook
      namespace: modeld-system
      path: /validate-infra-modeld-io-v1alpha1-virtualbucket
  failurePolicy: Fail
  name: virtualbucket.infra.modeld.io
  rules:
  - apiGroups:
    - infra.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - virtualbuckets
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: modeld-system/serving-cert
  name: report-validating-webhook-configuration
  namespace: modeld-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-report-operator-webhook
      namespace: modeld-system
      path: /validate-training-modeld-io-v1alpha1-report
  failurePolicy: Fail
  name: report.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - reports
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: modeld-system/serving-cert
  name: training-validating-webhook-configuration
  namespace: modeld-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /validate-training-modeld-io-v1alpha1-model
  failurePolicy: Fail
  name: model.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - models
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /validate-training-modeld-io-v1alpha1-notebook
  failurePolicy: Fail
  name: notebook.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - notebooks
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /validate-training-modeld-io-v1alpha1-notebookrun
  failurePolicy: Fail
  name: notebookrun.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - notebookruns
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /validate-training-modeld-io-v1alpha1-pipeline
  failurePolicy: Fail
  name: pipeline.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pipelines
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /validate-training-modeld-io-v1alpha1-pipelinerun
  failurePolicy: Fail
  name: pipelinerun.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pipelineruns
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /validate-training-modeld-io-v1alpha1-pipelinetrigger
  failurePolicy: Fail
  name: pipelinetrigger.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pipelinetrigger
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /validate-training-modeld-io-v1alpha1-study
  failurePolicy: Fail
  name: study.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - studies
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /validate-training-modeld-io-v1alpha1-trainer
  failurePolicy: Fail
  name: trainer.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - trainers
- admissionReviewVersions:
  - v1beta1
  - v1alpha1
  clientConfig:
    caBundle: CERT
    service:
      name: modeld-training-operator-webhook
      namespace: modeld-system
      path: /validate-training-modeld-io-v1alpha1-automlrun
  failurePolicy: Fail
  name: automlrun.training.modeld.io
  rules:
  - apiGroups:
    - training.modeld.io
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - automlruns
